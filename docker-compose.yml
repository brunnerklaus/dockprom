version: '3.7'

networks:
  monitor-net:
    driver: bridge

volumes:
  prometheus_data: {}
  grafana_data: {}
  influxdb-storage: {}
  chronograf-storage: {}
  influxdb-storage: {}

services:
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    environment:
      - VIRTUAL_HOST=prometheus.local
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=360d'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    ports:
      - '9090:9090'
    expose:
      - 9090
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"
    restart: always

  alertmanager:
    image: prom/alertmanager:latest
    container_name: alertmanager
    environment:
      - VIRTUAL_HOST=alertmanager.local
    volumes:
      - ./alertmanager:/etc/alertmanager
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'
    restart: unless-stopped
    ports:
      - '9093:9093'
    expose:
      - 9093
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"
    restart: always

  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
    restart: unless-stopped
    ports:
      - 9100:9100
    expose:
      - 9100
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"
    restart: always

  pihole-exporter:
    image: ekofr/pihole-exporter:latest
    container_name: pihole-exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    environment:
      - PIHOLE_HOSTNAME=${PIHOLE_HOST:-localhost}
      - PIHOLE_PASSWORD=${PIHOLE_PASSWORD:-changeme}
      - INTERVAL=${PIHOLEEXPORTER_INTERVAL:-15s}
      - PORT=${PIHOLEEXPORTER_PORT:-9617}
    restart: unless-stopped
    expose:
      - ${PIHOLEEXPORTER_PORT:-9617}
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"
    restart: always

  cadvisor:
    build:
      context: ./cadvisor
      dockerfile: Dockerfile
    image: cadvisor:latest
    container_name: cadvisor
    environment:
      - VIRTUAL_HOST=cadvisor.local
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    restart: unless-stopped
    ports:
      - '8080:8080'
    expose:
      - 8080
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"
    restart: always

  grafana:
    image: grafana/grafana:6.6.2
    container_name: grafana
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    environment:
      - VIRTUAL_HOST=grafana.local
      - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWOR=${GRAFANA_ADMIN_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=${GRAFANA_USER_ALLOW_SIGN_UP:-false}
      - GF_INSTALL_PLUGINS=grafana-clock-panel,natel-discrete-panel,grafana-piechart-panel,flant-statusmap-panel
    restart: unless-stopped
    ports:
      - '3000:3000'
    expose:
      - 3000
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"
    restart: always

  unifi-poller:
    image: golift/unifi-poller:${POLLER_TAG}
    container_name: unifi-poller
    environment:
      - UP_PROMETHEUS_DISABLE=false
      - UP_PROMETHEUS_NAMESPACE=unifipoller
      - UP_PROMETHEUS_HTTP_LISTEN=0.0.0.0:9130
      - UP_PROMETHEUS_REPORT_ERRORS=false
      - UP_PROMETHEUS_BUFFER=50
      - UP_INFLUXDB_DISABLE=true
      - UP_UNIFI_DEFAULT_USER=${UNIFI_USER}
      - UP_UNIFI_DEFAULT_PASS=${UNIFI_PASS}
      - UP_UNIFI_DEFAULT_URL=${UNIFI_URL}
      - UP_POLLER_DEBUG=${POLLER_DEBUG}
    expose:
      - 9130
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"
    restart: always

  # # This services probes things using HTTP, ICMP, TCP etc. Mainly used to do connectivity and service checks
  # blackbox_exporter:
  #   image: prom/blackbox-exporter:master
  #   container_name: blackbox-exporter
  #   dns:
  #     - 1.1.1.1
  #     - 8.8.8.8
  #   ports:
  #     - "9115:9115"
  #   volumes:
  #     - ./blackbox-exporter/blackbox_config.yml:/etc/blackbox_exporter/config.yml
  #   networks:
  #     - monitor-net
  #   labels:
  #     org.label-schema.group: "monitoring"
  #   restart: always
  #
  # nginx-proxy:
  #    image: jwilder/nginx-proxy
  #    container_name: nginx-proxy
  #    ports:
  #      - "80:80"
  #    volumes:
  #      - /var/run/docker.sock:/tmp/docker.sock:ro
  #    networks:
  #      - monitor-net
  #    restart: always
  #

#  pushgateway:
#    image: prom/pushgateway:latest
#    container_name: pushgateway
#    restart: unless-stopped
#    expose:
#      - 9091
#    networks:
#      - monitor-net
#    labels:
#      org.label-schema.group: "monitoring"

#  caddy:
#    #https://github.com/stefanprodan/caddy-builder
#    image: stefanprodan/caddy
#    container_name: caddy
#    ports:
#      - "3000:3000"
#      - "9090:9090"
#      - "9093:9093"
#      - "9091:9091"
#    volumes:
#      - ./caddy:/etc/caddy
#    environment:
#      - ADMIN_USER=${GRAFANA_ADMIN_USER:-admin}
#      - ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD:-admin}
#    restart: unless-stopped
#    networks:
#      - monitor-net
#    labels:
#      org.label-schema.group: "monitoring"
